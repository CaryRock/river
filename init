# Based on the example at: https://github.com/riverwm/river/blob/master/example/init

# Super + Return to start an instance of foot
riverctl map normal Super Return spawn foot

# Super + Q to close the focused view - <- this is "super + q", just like with dwm
riverctl map normal Super Q close

# Super + F2 to exit river
riverctl map normal Super F2 exit

# Super+J & Super+K to focus next/previous in the layout stack
riverctl map normal Super J focus-view next
riverctl map normal Super K focus-view previous

# Suepr+Shift+J/K to swap the focused view with the next/previous
riverctl map normal Super+Shift J swap next
riverctl map normal Super+Shift K swap previous

# Super+{Period,Comma} to shift focus to next/previous output
riverctl map normal Super Period focus-output next
riverctl map normal Super Comma  focus-output previous

# Super+Shift+{Period,Comma} to send the focused view to the next/previous output
riverctl map normal Super+Shift Period send-to-output next
riverctl map normal Super+Shift Comma send-to-output previous

# Super+Space to bump the focused view to the top of the layout stack
riverctl map normal Super Space zoom

# Super+H/L to decrease/increase the main ratio of rivertile(1)
riverctl map normal Super H send-layout-cmd rivertile "main-ratio -0.05"
riverctl map normal Super L send-layout-cmd rivertile "main-ratio +0.05"

# Super+Shift+H/L to increment/decrement the main count of rivertile(1)
riverctl map normal Super+Shift H send-layout-cmd rivertile "main-count +1"
riverctl map normal Super+Shift L send-layout-cmd rivertile "main-count -1"

# Suepr+Alt+{H,J,K,L} to move views
riverctl map normal Super+Alt H move left  100
riverctl map normal Super+Alt J move down  100
riverctl map normal Super+Alt K move up    100
riverctl map normal Super+Alt L move right 100

# Super+Alt+Control+{H,J,K,L}j to snap views to screen edges
riverctl map normal Super+Alt+Control H snap left
riverctl map normal Super+Alt+Control J snap down
riverctl map normal Super+Alt+Control K snap up  
riverctl map normal Super+Alt+Control L snap right

# Super+Alt+Shift+{H,J,K,L} to resize views
riverctl map normal Super+Alt+Shift H resize horizontal -100
riverctl map normal Super+Alt+Shift J resize vertical    100
riverctl map normal Super+Alt+Shift K resize vertical   -100
riverctl map normal Super+Alt+Shift L resize horizontal  100

# Super + Left Mouse Button to move views
riverctl map-pointer normal Super BTN_LEFT move-view

# Super + RMB to resive views
riverctl map-pointer normal Super BTN_RIGHT resize-view

# Super + MMB to toggle float
riverctl map-pointer normal Super BTN_MIDDLE toggle-float

for i in $(seq 1 9)
do
    # Don't be fooled, this is the same as with dwm, just 0-indexed
    tags=$((1 << ($i - 1)))

    # Super + [1-9] to focus tag [0-8]
    riverctl map normal Super $i set-focused-tags $tags

    # Super+Shift+[1-9] to tag focused view with tag [0-8]
    riverctl map normal Super+Shift $i set-view-tags $tags

    # Super+Control $i toggle-focused-tags $tags
    riverctl map normal Super+Control $i toggle-focused-tags $tags

    # Super+Shift+Control+[1-9] to toggle tag [0-8] of focused view
    riverctl map normal Super+Shift+Control $i toggle-view-tags $tags
done

# Super+0 to focus all tags
# Super+Shift+0 to tag focused view with all tags
all_tags=$(((i << 32) - 1))
riverctl map normal Super 0 set-focused-tags $all_tags
riverctl map normal Super+Shift 0 set-view-tags $all_tags

# Setup scratch pad(s) to use Super+Shift Return
scratch_tag=$((1 << 20))
# Toggle the scratchpad with Super+P
riverctl map normal Super P toggle-focused-tags ${scratch_tag}

# Send windows to the scratchpad with Super+Shift P
riverctl map normal Super+Shift P set-view-tags ${scratch_tag}

# Set spawn tagmask to ensure new windows don't have the scratchpad tag unless
# explicitly set
all_but_scratch_tag=$(( ((1 << 32) - 1) ^ $scratch_tag ))
riverctl spawn-tagmask ${all_but_scratch_tag}

# Sticky windows: windows always present
all_tags=$(((1 << 32) - 1))
sticky_tag=$((1 << 31))
all_but_sticky_tag=$(( $all_tags ^ $sticky_tag ))

riverctl map normal Super S toggle-view-tags $sticky_tag
riverctl spawn-tagmask ${all_but_sticky_tag}

## Modify the normal keybind to always select the sticky tag
#for i in $(seq 1 9)
#do
#    tags=$((1 << ($i - 1)))
#    # Super+[1-9] to focus tag [0-8]
#    riverctl map normal Super $i set-focused-tags $(($sticky_tag + $tags))
#done

# Super+I (no shift, just "i") to toggle float - matches dwm
riverctl map normal Super I toggle-float

# Super+F to toggle fullscreen
riverctl map normal Super F toggle-fullscreen

# Set background and border color
riverctl background-color 0x002b36
riverctl border-color-focused 0x93a1a1
riverctl border-color-unfocused 0x586e75

# Set the launcher to be tofi (to use Super + D like dwm)
#riverctl map normal Super D spawn 'wofi --show drun'
#riverctl map normal Super D spawn 'tofi' # --font /usr/share/fonts/joypixels/joypixels-6.6.0.ttf'
riverctl map normal Super D spawn 'fuzzel'

# Set wl-paste to paste what's in the clipboard's buffer
riverctl map normal Shift Insert 'wl-paste'

# Set the default layout generator to be rivertile and start it.
# River will send the process group of the init executable SIGTERM on exit.
riverctl default-layout rivertile
riverctl set-cursor-warp on-focus-change # 
riverctl focus-follows-cursor always # Because I like that feature in dwm
rivertile -view-padding 0 -outer-padding 0 &
swaybg -m fill -i /home/thaumaturge/.config/wall.jpg &
